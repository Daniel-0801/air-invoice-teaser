"use strict";

exports.__esModule = true;
exports.setupEmitSchemaWorker = void 0;

var _async = require("async");

var _graphql = require("gatsby/graphql");

var _common = require("../common");

const setupEmitSchemaWorker = ({
  reporter
}) => {
  const worker = (0, _async.cargo)((0, _async.asyncify)(async tasks => {
    const {
      length: l,
      [l - 1]: last
    } = tasks;
    const {
      schema,
      entries
    } = last;

    for (const [schemaOutputPath, schemaOutputOptions] of entries) {
      const {
        commentDescriptions = true
      } = schemaOutputOptions;
      let output;

      switch (schemaOutputOptions.format) {
        case 'sdl':
          output = (0, _graphql.printSchema)(schema, {
            commentDescriptions
          });
          break;

        case 'introspection':
          output = JSON.stringify((0, _graphql.introspectionFromSchema)(schema, {
            descriptions: commentDescriptions
          }), null, 2);
          break;
      }

      if (output) {
        reporter.verbose(`[typegen] Emit Gatsby schema into ${schemaOutputPath}`);
        await (0, _common.writeFile)(schemaOutputPath, output);
      }
    }
  }));
  return worker;
};

exports.setupEmitSchemaWorker = setupEmitSchemaWorker;