import type { Store } from 'redux';
import type { GraphQLSchema } from 'gatsby/graphql';
export declare type GatsbyStore = Store<GatsbyStateKnownShape, GatsbyKnownAction>;
export declare type GatsbyStateKnownShape = {
    schema: GraphQLSchema;
    lastAction: GatsbyKnownAction;
    program: {
        directory: string;
    };
};
export declare type GatsbyKnownAction = (GatsbyQueryExtractedAction | GatsbyReplaceStaticQueryAction | GatsbyQueryExtractionBabelSuccessAction | GatsbySetSchemaAction);
export declare type GatsbyQueryExtractionBabelSuccessAction = {
    type: 'QUERY_EXTRACTION_BABEL_SUCCESS';
    plugin: unknown;
    traceId: string | undefined;
    payload: {
        componentPath: string;
    };
};
export declare type GatsbyQueryExtractedAction = {
    type: 'QUERY_EXTRACTED';
    plugin: unknown;
    traceId: string | undefined;
    payload: {
        componentPath: string;
        query: string;
    };
};
export declare type GatsbyReplaceStaticQueryAction = {
    type: 'REPLACE_STATIC_QUERY';
    plugin: unknown;
    payload: {
        name: string;
        componentPath: string;
        id: string;
        query: string;
        hash: number;
    };
};
export declare type GatsbySetSchemaAction = {
    type: 'SET_SCHEMA';
    playload: GraphQLSchema;
};
export declare const gatsbyInternalScalars: string[];
