import type { Required } from 'utility-types';
import type { Reporter } from 'gatsby';
import type { GraphQLTagPluckOptions } from '@graphql-tools/graphql-tag-pluck';
import type { GatsbyStore } from './gatsby-utils';
import type { PluginOptions, SchemaOutputOptions, DeprecatedPluginOptions } from './types';
declare const DEFAULT_SCHEMA_OUTPUT_OPTION: {
    readonly format: "introspection";
    readonly commentDescriptions: true;
};
declare type MapEmitSchemaOption<T> = T extends {
    [key: string]: infer V;
} ? V extends true ? {
    [key: string]: typeof DEFAULT_SCHEMA_OUTPUT_OPTION;
} : {
    [key: string]: SchemaOutputOptions;
} : never;
export declare type RequiredPluginOptions = Required<Omit<PluginOptions, (keyof DeprecatedPluginOptions | 'emitSchema')> & {
    emitSchema: MapEmitSchemaOption<PluginOptions['emitSchema']>;
}>;
interface RequirePluginOptionsFn {
    (options: unknown, props: {
        reporter: Reporter;
        store: GatsbyStore;
    }): RequiredPluginOptions;
}
export declare const requirePluginOptions: RequirePluginOptionsFn;
export declare const GRAPHQL_TAG_PLUCK_OPTIONS: GraphQLTagPluckOptions;
export {};
